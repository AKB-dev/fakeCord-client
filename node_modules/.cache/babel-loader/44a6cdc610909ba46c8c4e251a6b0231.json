{"ast":null,"code":"import _classCallCheck from \"/home/adelkb/web@ac/javaScript/My_irc-master/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/adelkb/web@ac/javaScript/My_irc-master/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/adelkb/web@ac/javaScript/My_irc-master/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/adelkb/web@ac/javaScript/My_irc-master/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/adelkb/web@ac/javaScript/My_irc-master/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/adelkb/web@ac/javaScript/My_irc-master/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/adelkb/web@ac/javaScript/My_irc-master/client/src/App.js\";\nimport React, { Component } from 'react';\nimport openSocket from 'socket.io-client';\nvar socket = openSocket('http://localhost:3001');\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      channelSelected: '#General',\n      username: 'invité',\n      usertemp: '',\n      temp: '',\n      tempMessage: '',\n      channels: [],\n      messages: [],\n      users: []\n    };\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handlePseudo = _this.handlePseudo.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleMessage = _this.handleMessage.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      /*\n      * Connexion user au channel\n      */\n      socket.on('newuser', function (user) {\n        _this2.setState({\n          messages: _this2.state.messages.concat({\n            channel: _this2.state.channelSelected,\n            author: 'system',\n            content: user.username + ' has joined the channel.',\n            to: '',\n            wishper: 'no'\n          })\n        });\n      });\n      /*\n      * Renomé direct \n      */\n\n      socket.on('renameuser', function (user) {\n        _this2.setState({\n          messages: _this2.state.messages.concat({\n            channel: _this2.state.channelSelected,\n            author: 'system',\n            content: user.username + ' has evolved to ' + user.rename,\n            to: '',\n            wishper: 'no'\n          })\n        });\n      });\n      /*\n      * Deconnexion d'un utilisateur\n      */\n\n      socket.on('disuser', function (user) {\n        _this2.setState({\n          messages: _this2.state.messages.concat({\n            channel: _this2.state.channelSelected,\n            author: 'system',\n            content: user.username + ' is gone forever',\n            to: '',\n            wishper: 'no'\n          })\n        });\n      });\n      /*\n      */\n\n      socket.on('listUsers', function (user) {\n        _this2.setState({\n          users: []\n        });\n\n        for (var i in user) {\n          _this2.setState({\n            users: _this2.state.users.concat(user[i])\n          });\n        }\n      });\n      /*\n      * Définir les messages\n      */\n\n      socket.on('newmsg', function (message) {\n        _this2.setState({\n          messages: _this2.state.messages.concat({\n            channel: message.messages.messages.channel,\n            author: message.messages.messages.author,\n            content: message.messages.messages.content,\n            to: message.messages.messages.to,\n            wishper: message.messages.messages.wishper\n          })\n        });\n      });\n      /*\n      */\n\n      socket.on('listChannels', function (channels) {\n        _this2.setState({\n          channels: []\n        });\n\n        for (var i in channels) {\n          _this2.setState({\n            channels: _this2.state.channels.concat(channels[i])\n          });\n        }\n      });\n    }\n    /*\n    * Pour la connexion\n    */\n\n  }, {\n    key: \"onChange\",\n    value: function onChange(event) {\n      this.setState({\n        usertemp: event.target.value\n      });\n    }\n  }, {\n    key: \"handlePseudo\",\n    value: function handlePseudo(event) {\n      event.preventDefault();\n      socket.emit('login', {\n        username: this.state.usertemp\n      });\n      this.setState({\n        username: this.state.usertemp\n      });\n    }\n    /*\n    * Fonction pour commande /msg\n    */\n\n  }, {\n    key: \"commandMsg\",\n    value: function commandMsg(tab) {\n      tab = tab.filter(function (word) {\n        return word !== tab[0];\n      });\n      this.setState({\n        tempMessage: {\n          channel: this.state.channelSelected,\n          author: this.state.username,\n          content: tab.filter(function (word) {\n            return word !== tab[0];\n          }).join(' '),\n          to: tab[0],\n          wishper: 'yes'\n        }\n      });\n    }\n    /*\n    * Fonction pour commande /nick changer pseudo\n    */\n\n  }, {\n    key: \"commandName\",\n    value: function commandName(tab, event) {\n      socket.emit('rename', {\n        username: this.state.username,\n        rename: tab[1]\n      });\n      this.setState({\n        username: tab[1]\n      });\n    }\n    /*\n    * Fonction pour commande /create \n    */\n\n  }, {\n    key: \"commandCreate\",\n    value: function commandCreate(tab) {\n      var listChan = this.state.channels.filter(function (channel) {\n        return channel === '#' + tab[1];\n      });\n\n      if (listChan.length === 0) {\n        this.setState({\n          tempMessage: {\n            channel: this.state.channelSelected,\n            author: 'system',\n            content: 'A new channel has been created : #' + tab[1],\n            to: '',\n            wishper: 'no'\n          }\n        });\n        socket.emit('newChannel', {\n          channel: tab[1]\n        });\n        socket.emit('newmessage', {\n          messages: this.state.tempMessage\n        });\n      }\n\n      if (listChan.length >= 1) {\n        this.setState({\n          tempMessage: {\n            channel: this.state.channelSelected,\n            author: 'system',\n            content: 'Ce channel existe déjà',\n            to: '',\n            wishper: 'no'\n          }\n        });\n        socket.emit('newmessage', {\n          messages: this.state.tempMessage\n        });\n      }\n\n      return true;\n    }\n  }, {\n    key: \"commandJoin\",\n    value: function commandJoin(tab) {\n      this.setState({\n        channelSelected: tab[1]\n      });\n    }\n  }, {\n    key: \"commandHelp\",\n    value: function commandHelp() {\n      this.setState({\n        tempMessage: {\n          channel: this.state.channelSelected,\n          author: this.state.username,\n          content: 'hello',\n          to: 'system'\n        }\n      });\n    } //Pour l'envoi de message\n\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState({\n        temp: event.target.value\n      });\n      var tab = event.target.value.split(' ');\n      var tabBegin = tab[0].split('');\n\n      if (tab[0] === \"/help\") {\n        this.commandHelp();\n        return false;\n      }\n\n      if (tab[0] === '/msg') {\n        this.commandMsg(tab);\n        return false;\n      }\n\n      if (tab[0] === '/nick') {\n        return false;\n      }\n\n      if (tab[0] === '/create') {\n        return false;\n      }\n\n      if (tab[0] === '/join') {\n        return false;\n      }\n\n      if (tabBegin[0] !== \"/\") {\n        this.setState({\n          tempMessage: {\n            channel: this.state.channelSelected,\n            author: this.state.username,\n            content: event.target.value,\n            to: '',\n            wishper: 'no'\n          }\n        });\n      }\n    } //Confirmation du formulaire / envoi de message\n\n  }, {\n    key: \"handleMessage\",\n    value: function handleMessage(event) {\n      event.preventDefault();\n      var tab = this.state.temp.split(' ');\n\n      if (tab[0] === '/nick') {\n        if (tab[1] !== undefined && tab[1] !== '') {\n          this.commandName(tab, event);\n        }\n\n        this.setState({\n          temp: ''\n        });\n        return false;\n      }\n\n      if (tab[0] === '/create') {\n        if (tab[1] !== undefined && tab[1] !== '') {\n          this.commandCreate(tab);\n        }\n\n        this.setState({\n          temp: ''\n        });\n        return false;\n      }\n\n      if (tab[0] === '/join') {\n        if (tab[1] !== undefined && tab[1] !== '') {\n          this.commandJoin(tab);\n        }\n      }\n\n      socket.emit('newmessage', {\n        messages: this.state.tempMessage\n      });\n      this.setState({\n        temp: ''\n      });\n    } // Afficher les messages\n\n  }, {\n    key: \"affichMessage\",\n    value: function affichMessage() {\n      var _this3 = this;\n\n      var tab = this.state.messages.filter(function (messages) {\n        return messages.channel === _this3.state.channelSelected;\n      });\n      return tab.map(function (message) {\n        if (message.author === 'system') {\n          return React.createElement(\"span\", {\n            className: \"msg\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 271\n            },\n            __self: this\n          }, React.createElement(\"strong\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 271\n            },\n            __self: this\n          }, message.content, \" \", React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 271\n            },\n            __self: this\n          })));\n        }\n\n        if (message.to !== '' && message.to === _this3.state.username) {\n          return React.createElement(\"span\", {\n            className: \"msg\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 274\n            },\n            __self: this\n          }, React.createElement(\"em\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 274\n            },\n            __self: this\n          }, message.author, \" wispered you \"), \" : \", message.content, \" \", React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 274\n            },\n            __self: this\n          }));\n        }\n\n        if (message.to !== '' && message.author === _this3.state.username) {\n          return React.createElement(\"span\", {\n            className: \"msg\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 277\n            },\n            __self: this\n          }, React.createElement(\"em\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 277\n            },\n            __self: this\n          }, \" yo sent a wishper \", message.to), \" : \", message.content, \" \", React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 277\n            },\n            __self: this\n          }));\n        }\n\n        if (message.author !== 'system' && message.wishper === 'no') {\n          return React.createElement(\"span\", {\n            className: \"msg\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 280\n            },\n            __self: this\n          }, React.createElement(\"strong\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 280\n            },\n            __self: this\n          }, message.author), \" : \", message.content, \" \", React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 280\n            },\n            __self: this\n          }));\n        }\n      });\n    } //Afficher les membres\n\n  }, {\n    key: \"affichMembers\",\n    value: function affichMembers() {\n      return this.state.users.map(function (user) {\n        return React.createElement(\"span\", {\n          className: \"users\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 291\n          },\n          __self: this\n        }, \" \", user, \"  \");\n      });\n    } //Afficher les channels \n\n  }, {\n    key: \"affichChannels\",\n    value: function affichChannels() {\n      var _this4 = this;\n\n      return this.state.channels.map(function (channel) {\n        return React.createElement(\"ul\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 300\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          className: \"channels\",\n          value: channel,\n          onClick: function onClick(event) {\n            _this4.setState({\n              channelSelected: event.target.getAttribute('value')\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 301\n          },\n          __self: this\n        }, channel, \" \\xA0\"));\n      });\n    } //Rendu\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.username === 'invité') {\n        return React.createElement(\"div\", {\n          className: \"intro\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 319\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"username\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 320\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 321\n          },\n          __self: this\n        }, \"Welcome to FakeCord\"), React.createElement(\"div\", {\n          className: \"p-8\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 322\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 323\n          },\n          __self: this\n        })), React.createElement(\"form\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 328\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          className: \"chat-entry\",\n          type: \"text\",\n          onChange: this.onChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 329\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          className: \"btn\",\n          onClick: this.handlePseudo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 330\n          },\n          __self: this\n        }, \"Enter\"))));\n      }\n\n      if (this.state.username !== '') {\n        return React.createElement(\"div\", {\n          className: \"App\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 338\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 339\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"flex justify-center py-8\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 340\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"list-gannels\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 341\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 342\n          },\n          __self: this\n        }, \"#Channels\", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 343\n          },\n          __self: this\n        }), React.createElement(\"ul\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 344\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 345\n          },\n          __self: this\n        }, this.affichChannels()))))), React.createElement(\"div\", {\n          className: \"text-box\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 350\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 351\n          },\n          __self: this\n        }, React.createElement(\"em\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 352\n          },\n          __self: this\n        }, \"Welcome \", this.state.username, \" to \", this.state.channelSelected)), React.createElement(\"div\", {\n          className: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 354\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 355\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          id: \"content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 356\n          },\n          __self: this\n        }, this.affichMessage(), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 358\n          },\n          __self: this\n        }))))), React.createElement(\"div\", {\n          className: \"Chat-box\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 364\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 365\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"members\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 366\n          },\n          __self: this\n        }, \"#People\", React.createElement(\"ul\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 368\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 369\n          },\n          __self: this\n        }, this.affichMembers())))))), React.createElement(\"div\", {\n          className: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 375\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 376\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 377\n          },\n          __self: this\n        }, React.createElement(\"form\", {\n          className: \"sendForm\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 378\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"text\",\n          className: \"input-text\",\n          id: \"msg\",\n          value: this.state.temp,\n          onChange: this.handleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 379\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          className: \"btn\",\n          onClick: this.handleMessage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 380\n          },\n          __self: this\n        }, \"Envoyer\"))))));\n      }\n\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388\n        },\n        __self: this\n      }, \" \", this.state.username, \" has joined the channel\");\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/adelkb/web@ac/javaScript/My_irc-master/client/src/App.js"],"names":["React","Component","openSocket","socket","App","props","state","channelSelected","username","usertemp","temp","tempMessage","channels","messages","users","onChange","bind","handlePseudo","handleChange","handleMessage","on","user","setState","concat","channel","author","content","to","wishper","rename","i","message","event","target","value","preventDefault","emit","tab","filter","word","join","listChan","length","split","tabBegin","commandHelp","commandMsg","undefined","commandName","commandCreate","commandJoin","map","getAttribute","affichChannels","affichMessage","affichMembers"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport openSocket from 'socket.io-client';\nconst socket = openSocket('http://localhost:3001');\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            channelSelected: '#General',\n            username: 'invité',\n            usertemp: '',\n            temp: '',\n            tempMessage: '',\n            channels: [],\n            messages: [],\n            users: []\n        }\n        this.onChange = this.onChange.bind(this);\n        this.handlePseudo = this.handlePseudo.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleMessage = this.handleMessage.bind(this);\n    }\n\n    componentDidMount() {\n\n        /*\n        * Connexion user au channel\n        */\n        socket.on('newuser', (user) => {\n            this.setState({\n                messages: this.state.messages.concat({\n                    channel: this.state.channelSelected,\n                    author: 'system',\n                    content: user.username + ' has joined the channel.',\n                    to: '',\n                    wishper: 'no'\n                })\n            })\n        });\n\n        /*\n        * Renomé direct \n        */\n        socket.on('renameuser', (user) => {\n            this.setState({\n                messages: this.state.messages.concat({\n                    channel: this.state.channelSelected,\n                    author: 'system',\n                    content: user.username + ' has evolved to ' + user.rename,\n                    to: '',\n                    wishper: 'no'\n                })\n            })\n        });\n\n        /*\n        * Deconnexion d'un utilisateur\n        */\n        socket.on('disuser', (user) => {\n            this.setState({\n                messages: this.state.messages.concat({\n                    channel: this.state.channelSelected,\n                    author: 'system',\n                    content: user.username + ' is gone forever',\n                    to: '',\n                    wishper: 'no'\n                })\n            })\n        });\n\n        /*\n        */\n        socket.on('listUsers', (user) => {\n            this.setState({ users: [] });\n            for (var i in user) {\n                this.setState({ users: this.state.users.concat(user[i]) });\n            }\n        })\n\n        /*\n        * Définir les messages\n        */\n        socket.on('newmsg', (message) => {\n            this.setState({\n                messages: this.state.messages.concat({\n                    channel: message.messages.messages.channel,\n                    author: message.messages.messages.author,\n                    content: message.messages.messages.content,\n                    to: message.messages.messages.to,\n                    wishper: message.messages.messages.wishper\n                })\n            })\n        })\n\n        /*\n        */\n        socket.on('listChannels', (channels) => {\n            this.setState({ channels: [] });\n            for (var i in channels) {\n                this.setState({ channels: this.state.channels.concat(channels[i]) });\n            }\n        })\n    }\n\n    /*\n    * Pour la connexion\n    */\n    onChange(event) {\n        this.setState({ usertemp: event.target.value })\n    }\n\n    handlePseudo(event) {\n        event.preventDefault();\n        socket.emit('login', { username: this.state.usertemp })\n        this.setState({ username: this.state.usertemp })\n    }\n\n    /*\n    * Fonction pour commande /msg\n    */\n    commandMsg(tab) {\n        tab = tab.filter(word => word !== tab[0]);\n        this.setState({\n            tempMessage: {\n                channel: this.state.channelSelected,\n                author: this.state.username,\n                content: tab.filter(word => word !== tab[0]).join(' '),\n                to: tab[0],\n                wishper: 'yes'\n            }\n        });\n    }\n\n\n    /*\n    * Fonction pour commande /nick changer pseudo\n    */\n    commandName(tab, event) {\n        socket.emit('rename', {\n            username: this.state.username,\n            rename: tab[1],\n        });\n        this.setState({ username: tab[1] });\n    }\n\n    /*\n    * Fonction pour commande /create \n    */\n    commandCreate(tab) {\n        var listChan = this.state.channels.filter(channel => channel === '#' + tab[1]);\n        if (listChan.length === 0) {\n            this.setState({\n                tempMessage: {\n                    channel: this.state.channelSelected,\n                    author: 'system',\n                    content: 'A new channel has been created : #' + tab[1],\n                    to: '',\n                    wishper: 'no'\n                }\n            });\n            socket.emit('newChannel', {\n                channel: tab[1]\n            })\n            socket.emit('newmessage', { messages: this.state.tempMessage });\n        }\n        if (listChan.length >= 1) {\n            this.setState({\n                tempMessage: {\n                    channel: this.state.channelSelected,\n                    author: 'system',\n                    content: 'Ce channel existe déjà',\n                    to: '',\n                    wishper: 'no'\n                }\n            });\n            socket.emit('newmessage', { messages: this.state.tempMessage });\n        }\n        return true;\n    }\n\n\n    commandJoin(tab) {\n        this.setState({ channelSelected: tab[1] })\n    }\n\n    commandHelp() {\n        this.setState({\n                tempMessage: {\n                    channel: this.state.channelSelected,\n                    author: this.state.username,\n                    content: 'hello',\n                    to: 'system',\n                }\n            })\n    }\n\n\n    //Pour l'envoi de message\n    handleChange(event) {\n        this.setState({ temp: event.target.value });\n        var tab = event.target.value.split(' ');\n        var tabBegin = tab[0].split('');\n        if(tab[0] === \"/help\") {\n            this.commandHelp();\n            return false;\n        }\n        if (tab[0] === '/msg') {\n            this.commandMsg(tab);\n            return false;\n        }\n        if (tab[0] === '/nick') {\n            return false;\n        }\n        if (tab[0] === '/create') {\n            return false;\n        }\n        if (tab[0] === '/join') {\n            return false;\n        }\n        if (tabBegin[0] !== \"/\") {\n            this.setState({\n                tempMessage: {\n                    channel: this.state.channelSelected,\n                    author: this.state.username,\n                    content: event.target.value,\n                    to: '',\n                    wishper: 'no'\n                }\n            })\n        }\n    }\n\n\n\n    //Confirmation du formulaire / envoi de message\n\n    handleMessage(event) {\n        event.preventDefault();\n        var tab = this.state.temp.split(' ');\n        if (tab[0] === '/nick') {\n            if (tab[1] !== undefined && tab[1] !== '') {\n                this.commandName(tab, event);\n            }\n            this.setState({ temp: '' });\n            return false;\n        }\n        if (tab[0] === '/create') {\n            if (tab[1] !== undefined && tab[1] !== '') {\n                this.commandCreate(tab);\n            }\n            this.setState({ temp: '' });\n            return false;\n        }\n        if (tab[0] === '/join') {\n            if (tab[1] !== undefined && tab[1] !== '') {\n                this.commandJoin(tab);\n            }\n        }\n        socket.emit('newmessage', { messages: this.state.tempMessage });\n        this.setState({ temp: '' });\n    }\n\n    \n    // Afficher les messages\n    \n    affichMessage() {\n        var tab = this.state.messages.filter(messages => messages.channel === this.state.channelSelected);\n        return tab.map(message => {\n            if (message.author === 'system') {\n                return <span className=\"msg\"><strong>{message.content} <br /></strong></span>\n            }\n            if (message.to !== '' && message.to === this.state.username) {\n                return <span className=\"msg\"><em>{message.author} wispered you </em> : {message.content} <br /></span>\n            }\n            if (message.to !== '' && message.author === this.state.username) {\n                return <span className=\"msg\"><em> yo sent a wishper {message.to}</em> : {message.content} <br /></span>\n            }\n            if (message.author !== 'system' && message.wishper === 'no') {\n                return <span className=\"msg\"><strong>{message.author}</strong> : {message.content} <br /></span>\n            }\n        });\n    }\n\n\n    \n    //Afficher les membres\n\n    affichMembers() {\n        return this.state.users.map(user => {\n            return <span className=\"users\"> {user}  </span>\n        });\n    }\n\n    \n    //Afficher les channels \n\n    affichChannels() {\n        return this.state.channels.map(channel => {\n            return <ul>\n                        <li\n                        className=\"channels\"\n                        value={channel}\n                        onClick={(event) => { this.setState({ channelSelected: event.target.getAttribute('value') }) }}>\n                        {channel} &nbsp;\n                        </li>\n                    </ul>\n        })\n    }\n\n\n\n    //Rendu\n    \n\n    render() {\n        if (this.state.username === 'invité') {\n            return (\n                <div className=\"intro\">\n                    <div className=\"username\">\n                        <h1>Welcome to FakeCord</h1>\n                        <div className=\"p-8\">\n                            <span className=\"label\">\n                                \n                            </span>\n                        </div>\n\n                        <form>\n                            <input className='chat-entry' type=\"text\" onChange={this.onChange} />\n                            <button className='btn' onClick={this.handlePseudo}>Enter</button>\n                        </form>\n                    </div>\n                </div>\n            )\n        }\n        if (this.state.username !== '') {\n            return (\n                <div className=\"App\">\n                    <div className='container'>\n                        <div className=\"flex justify-center py-8\">\n                            <div className=\"list-gannels\">\n                                <div className=\"\">\n                                    #Channels<br />\n                                    <ul>\n                                        <li>{this.affichChannels()}</li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"text-box\">\n                        <div className=\"\">\n                                    <em>Welcome {this.state.username} to {this.state.channelSelected}</em>\n                                </div>\n                            <div className=\"\">\n                                <div>\n                                    <div id=\"content\">\n                                        {this.affichMessage()}\n                                        <br />\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"Chat-box\">\n                            <div className=\"\">\n                                <div className=\"members\">\n                                    #People\n                                    <ul>\n                                        <li>{this.affichMembers()}</li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"\">\n                        <span className=\"\">\n                            <div className=\"\">\n                                <form className=\"sendForm\">\n                                    <input type=\"text\" className=\"input-text\" id=\"msg\" value={this.state.temp} onChange={this.handleChange} />\n                                    <button className=\"btn\" onClick={this.handleMessage}>Envoyer</button>\n                                </form>\n                            </div>\n                        </span>\n                    </div>\n                </div>\n            )\n        }\n        return (<p> {this.state.username} has joined the channel</p>);\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}